services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper1
    container_name: zookeeper1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_PEERPORT: 2888
      ZOOKEEPER_LEADERPORT: 3888
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_AUTH_PROVIDER_1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: sasl
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/zookeeper_jaas.conf"
    volumes:
      - ./zookeeper_jaas.conf:/etc/kafka/zookeeper_jaas.conf
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/zookeeper1/2181) &>/dev/null && exit 0 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 50s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network

  zookeeper2:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_PEERPORT: 2888
      ZOOKEEPER_LEADERPORT: 3888
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_AUTH_PROVIDER_1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: sasl
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/zookeeper_jaas.conf"
    volumes:
      - ./zookeeper_jaas.conf:/etc/kafka/zookeeper_jaas.conf
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/zookeeper2/2181) &>/dev/null && exit 0 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 50s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network

  zookeeper3:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper3
    container_name: zookeeper3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_PEERPORT: 2888
      ZOOKEEPER_LEADERPORT: 3888
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_AUTH_PROVIDER_1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: sasl
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/zookeeper_jaas.conf"
    volumes:
      - ./zookeeper_jaas.conf:/etc/kafka/zookeeper_jaas.conf
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/zookeeper3/2181) &>/dev/null && exit 0 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 50s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network
      
  kafka1:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "9093:9093"  
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy
      zookeeper3:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,SASL_PLAINTEXT://kafka1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /var/log/kafka
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_SCHEMA_REGISTRY_URL: 8081
    volumes:
      - ./kafka_jaas.conf:/etc/kafka/kafka_jaas.conf
      - ./client.properties:/etc/kafka/client.properties
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/kafka1/9092) &>/dev/null && exit 0 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network

  kafka2:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9094:9094"  
      - "9095:9095"  
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094,SASL_PLAINTEXT://kafka2:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /var/log/kafka
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_SCHEMA_REGISTRY_URL: 8081
    volumes:
      - ./kafka_jaas.conf:/etc/kafka/kafka_jaas.conf
      - ./client.properties:/etc/kafka/client.properties
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/kafka2/9094) &>/dev/null && exit 0 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    depends_on:
      kafka1:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network

  kafka3:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9096:9096"  
      - "9097:9097" 
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9096,SASL_PLAINTEXT://kafka3:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /var/log/kafka
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_SCHEMA_REGISTRY_URL: 8081
    volumes:
      - ./kafka_jaas.conf:/etc/kafka/kafka_jaas.conf
      - ./client.properties:/etc/kafka/client.properties
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/kafka3/9096) &>/dev/null && exit 0 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    depends_on:
      kafka2:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:9092,PLAINTEXT://kafka2:9094,PLAINTEXT://kafka3:9096
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - internal-network

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka3:9096"
    depends_on:
      - kafka3
    networks:
      - internal-network

  prometheus:
    image: prom/prometheus:v2.52.0
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml"
    networks:
      - internal-network

  grafana:
    image: grafana/grafana:10.1.10
    ports:
      - "3000:3000"
    networks:
      - internal-network

networks:
  internal-network:
    driver: bridge

